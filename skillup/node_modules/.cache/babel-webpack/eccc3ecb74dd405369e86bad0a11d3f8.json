{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/chart-data.service\";\nimport * as i2 from \"../charts/bubble-chart/bubble-chart.component\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../charts/diverging-bar-chart/diverging-bar-chart.component\";\n\nfunction WorkspaceComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", data_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", data_r1.Study, \" \", data_r1.Year, \"\");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nexport class WorkspaceComponent {\n  constructor(cds) {\n    this.cds = cds;\n    this.chartData$ = this.cds.chartData$; // #3. 전처리한 데이터 받아와 사용\n\n    this.A_type = [];\n    this.B_type = [];\n    this.C_type = [];\n    this.D_type = [];\n    this.cds.chartData$.subscribe(res => {\n      console.log({\n        res\n      });\n      this.dataArray = res;\n      res.forEach(d => {\n        if (d.Type == 'A') this.A_type.push(d);\n        if (d.Type == 'B') this.B_type.push(d);\n        if (d.Type == 'C') this.C_type.push(d);\n        if (d.Type == 'D') this.D_type.push(d);\n      });\n      this.A_type = [...this.A_type];\n      this.B_type = [...this.B_type];\n      this.C_type = [...this.C_type];\n      this.D_type = [...this.D_type];\n      console.log(this.B_type);\n    });\n  }\n\n  ngOnInit() {}\n\n  log(arg) {\n    console.log({\n      selection: arg\n    });\n  }\n\n}\n\nWorkspaceComponent.ɵfac = function WorkspaceComponent_Factory(t) {\n  return new (t || WorkspaceComponent)(i0.ɵɵdirectiveInject(i1.ChartDataService));\n};\n\nWorkspaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WorkspaceComponent,\n  selectors: [[\"app-workspace\"]],\n  decls: 12,\n  vars: 10,\n  consts: [[1, \"bubbleChart\"], [3, \"data\", \"i\"], [1, \"divergingBarChart\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"study\"], [3, \"ngValue\"]],\n  template: function WorkspaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"workspace works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵelement(3, \"app-bubble-chart\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵelementStart(5, \"span\");\n      i0.ɵɵtext(6, \"\\uC5F0\\uAD6C\\uC790 \\uC120\\uD0DD \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function WorkspaceComponent_Template_select_ngModelChange_7_listener($event) {\n        return ctx.selection = $event;\n      })(\"change\", function WorkspaceComponent_Template_select_change_7_listener() {\n        return ctx.log(ctx.selection);\n      });\n      i0.ɵɵelement(8, \"option\");\n      i0.ɵɵtemplate(9, WorkspaceComponent_option_9_Template, 2, 3, \"option\", 4);\n      i0.ɵɵpipe(10, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"app-diverging-bar-chart\", 5);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"data\", ctx.A_type)(\"i\", 0);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selection);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(10, 5, ctx.chartData$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"study\", i0.ɵɵpureFunction2(7, _c0, ctx.selection, ctx.selection));\n    }\n  },\n  directives: [i2.BubbleChartComponent, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgModel, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.NgForOf, i5.DivergingBarChartComponent],\n  pipes: [i4.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3b3Jrc3BhY2UuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\Documents\\GitHub\\VIS-LAB\\skillup\\src\\app\\workspace\\workspace.component.ts","C:\\Users\\user\\Documents\\GitHub\\VIS-LAB\\skillup\\src\\app\\workspace\\workspace.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ChartDataService, ChartItem } from '../shared/chart-data.service';\nimport { TableItem } from '../shared/data.service';\n\n@Component({\n  selector: 'app-workspace',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.css']\n})\nexport class WorkspaceComponent implements OnInit {\n  selection: (ChartItem | TableItem);\n  dataArray: (ChartItem | TableItem)[];\n  chartData$: Observable<(ChartItem | TableItem)[]>;\n  A_type : (ChartItem | TableItem)[];\n  B_type : (ChartItem | TableItem)[];\n  C_type : (ChartItem | TableItem)[];\n  D_type : (ChartItem | TableItem)[];\n\n  constructor(private cds: ChartDataService) { \n    this.chartData$ = this.cds.chartData$;\n    // #3. 전처리한 데이터 받아와 사용\n    this.A_type=[];\n    this.B_type=[];\n    this.C_type=[];\n    this.D_type=[];\n    this.cds.chartData$.subscribe(res => {\n      console.log({res});\n      this.dataArray = res;\n      res.forEach(d => {\n        if(d.Type=='A') this.A_type.push(d)\n        if(d.Type=='B') this.B_type.push(d)\n        if(d.Type=='C') this.C_type.push(d)\n        if(d.Type=='D') this.D_type.push(d)\n      });\n      this.A_type = [...this.A_type]\n      this.B_type = [...this.B_type]\n      this.C_type = [...this.C_type]\n      this.D_type = [...this.D_type]\n      console.log(this.B_type);\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  log(arg) {\n    console.log({selection: arg})\n  }\n}\n","<p>workspace works!</p>\n<div class=\"bubbleChart\" >\n    <!-- 반복문 사용해 서로 다른 데이터가 들어가는 16개 차트 구현 \n        1개 Array => 차트 16개\n            혹은\n        4개 Array => 차트 4개씩\n        등등 자유롭게\n    -->\n    <app-bubble-chart [data]=\"A_type\" [i]=\"0\"></app-bubble-chart>\n</div>\n\n<div class=\"divergingBarChart\">\n    <span>연구자 선택 </span>\n    <select [(ngModel)]=\"selection\" (change)=\"log(selection)\">\n        <option></option>\n        <option *ngFor=\"let data of chartData$ | async\" [ngValue]=\"data\">{{data.Study}} {{data.Year}}</option>\n    </select>\n\n                                        <!-- 수정하기 -->\n    <app-diverging-bar-chart [study]=\"[selection, selection]\"></app-diverging-bar-chart>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}