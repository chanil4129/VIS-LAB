{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/chart-data.service\";\nimport * as i2 from \"@angular/material/grid-list\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../charts/diverging-bar-chart/diverging-bar-chart.component\";\nimport * as i6 from \"../charts/bubble-chart/bubble-chart.component\";\n\nfunction WorkspaceComponent_mat_grid_tile_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelement(1, \"app-bubble-chart\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const drug_r5 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r0.A_type)(\"drug\", drug_r5);\n  }\n}\n\nfunction WorkspaceComponent_mat_grid_tile_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelement(1, \"app-bubble-chart\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const drug_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r1.B_type)(\"drug\", drug_r6);\n  }\n}\n\nfunction WorkspaceComponent_mat_grid_tile_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelement(1, \"app-bubble-chart\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const drug_r7 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r2.C_type)(\"drug\", drug_r7);\n  }\n}\n\nfunction WorkspaceComponent_mat_grid_tile_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\");\n    i0.ɵɵelement(1, \"app-bubble-chart\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const drug_r8 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r3.D_type)(\"drug\", drug_r8);\n  }\n}\n\nfunction WorkspaceComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", data_r9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", data_r9.Study, \" \", data_r9.Year, \" \", data_r9.Type, \"\");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return [a0, a1];\n};\n\nexport class WorkspaceComponent {\n  constructor(cds) {\n    this.cds = cds;\n    this.drugs = ['Oxaliplatin', 'Irinotecan', 'push', 'civ'];\n    this.chartData$ = this.cds.chartData$; // #3. 전처리한 데이터 받아와 사용\n\n    this.cds.chartData$.subscribe(res => {\n      this.A_type = [];\n      this.B_type = [];\n      this.C_type = [];\n      this.D_type = [];\n      console.log({\n        res\n      });\n      this.dataArray = res;\n      res.forEach(d => {\n        if (d.Type == 'A') this.A_type.push(d);\n        if (d.Type == 'B') this.B_type.push(d);\n        if (d.Type == 'C') this.C_type.push(d);\n        if (d.Type == 'D') this.D_type.push(d);\n      }); // console.log(this.B_type);\n    });\n  }\n\n  ngOnInit() {}\n\n  log(arg) {\n    console.log(`selection1 : `, {\n      selection1: arg\n    });\n    console.log('selection2 : ', {\n      selection2: undefined\n    });\n    this.selection2 = this.dataArray.find(v => v.Study == this.selection1.Study && v.Type != this.selection1.Type);\n  }\n\n}\n\nWorkspaceComponent.ɵfac = function WorkspaceComponent_Factory(t) {\n  return new (t || WorkspaceComponent)(i0.ɵɵdirectiveInject(i1.ChartDataService));\n};\n\nWorkspaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WorkspaceComponent,\n  selectors: [[\"app-workspace\"]],\n  decls: 16,\n  vars: 12,\n  consts: [[1, \"bubbleChart\"], [\"cols\", \"4\", \"rowHeight\", \"300px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"divergingBarChart\"], [3, \"ngModel\", \"ngModelChange\", \"change\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"study\"], [3, \"data\", \"drug\"], [3, \"ngValue\"]],\n  template: function WorkspaceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"workspace works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0);\n      i0.ɵɵelementStart(3, \"mat-grid-list\", 1);\n      i0.ɵɵtemplate(4, WorkspaceComponent_mat_grid_tile_4_Template, 2, 2, \"mat-grid-tile\", 2);\n      i0.ɵɵtemplate(5, WorkspaceComponent_mat_grid_tile_5_Template, 2, 2, \"mat-grid-tile\", 2);\n      i0.ɵɵtemplate(6, WorkspaceComponent_mat_grid_tile_6_Template, 2, 2, \"mat-grid-tile\", 2);\n      i0.ɵɵtemplate(7, WorkspaceComponent_mat_grid_tile_7_Template, 2, 2, \"mat-grid-tile\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3);\n      i0.ɵɵelementStart(9, \"span\");\n      i0.ɵɵtext(10, \"\\uC5F0\\uAD6C\\uC790 \\uC120\\uD0DD \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function WorkspaceComponent_Template_select_ngModelChange_11_listener($event) {\n        return ctx.selection1 = $event;\n      })(\"change\", function WorkspaceComponent_Template_select_change_11_listener() {\n        return ctx.log(ctx.selection1);\n      });\n      i0.ɵɵelement(12, \"option\");\n      i0.ɵɵtemplate(13, WorkspaceComponent_option_13_Template, 2, 4, \"option\", 5);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"app-diverging-bar-chart\", 6);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.drugs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.drugs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.drugs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.drugs);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selection1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 7, ctx.chartData$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"study\", i0.ɵɵpureFunction2(9, _c0, ctx.selection1, ctx.selection2));\n    }\n  },\n  directives: [i2.MatGridList, i3.NgForOf, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i5.DivergingBarChartComponent, i2.MatGridTile, i6.BubbleChartComponent],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ3b3Jrc3BhY2UuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:\\Users\\user\\Documents\\GitHub\\VIS-LAB\\skillup\\src\\app\\workspace\\workspace.component.ts","C:\\Users\\user\\Documents\\GitHub\\VIS-LAB\\skillup\\src\\app\\workspace\\workspace.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ChartDataService, ChartItem } from '../shared/chart-data.service';\nimport { TableItem } from '../shared/data.service';\n\n@Component({\n  selector: 'app-workspace',\n  templateUrl: './workspace.component.html',\n  styleUrls: ['./workspace.component.css']\n})\nexport class WorkspaceComponent implements OnInit {\n  selection1: (ChartItem | TableItem);\n  selection2: (ChartItem | TableItem);\n  dataArray : (ChartItem | TableItem)[];\n  chartData$: Observable<(ChartItem | TableItem)[]>;\n  A_type : (ChartItem | TableItem)[];\n  B_type : (ChartItem | TableItem)[];\n  C_type : (ChartItem | TableItem)[];\n  D_type : (ChartItem | TableItem)[];\n  drugs=['Oxaliplatin','Irinotecan','push','civ'];\n\n  constructor(private cds: ChartDataService) { \n    this.chartData$ = this.cds.chartData$;\n    // #3. 전처리한 데이터 받아와 사용\n    this.cds.chartData$.subscribe(res => {\n      this.A_type = [];\n      this.B_type = [];\n      this.C_type = [];\n      this.D_type = [];\n      console.log({res});\n      this.dataArray=res\n      res.forEach(d => {\n        if(d.Type=='A') this.A_type.push(d)\n        if(d.Type=='B') this.B_type.push(d)\n        if(d.Type=='C') this.C_type.push(d)\n        if(d.Type=='D') this.D_type.push(d)\n      });\n      // console.log(this.B_type);\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  log(arg) {\n    console.log(`selection1 : `,{selection1: arg})\n    console.log('selection2 : ',{selection2: undefined})\n    this.selection2 = this.dataArray.find(v => (v.Study == this.selection1.Study) && (v.Type != this.selection1.Type))\n  }\n}\n","<p>workspace works!</p>\n<div class=\"bubbleChart\" >\n    <!-- 반복문 사용해 서로 다른 데이터가 들어가는 16개 차트 구현 \n        1개 Array => 차트 16개\n            혹은\n        4개 Array => 차트 4개씩\n        등등 자유롭게\n    -->\n    <mat-grid-list cols=\"4\" rowHeight=\"300px\">\n        <mat-grid-tile *ngFor=\"let drug of drugs\">\n            <app-bubble-chart [data]=\"A_type\" [drug]=\"drug\"></app-bubble-chart>\n        </mat-grid-tile>\n        <mat-grid-tile *ngFor=\"let drug of drugs\">\n            <app-bubble-chart [data]=\"B_type\" [drug]=\"drug\"></app-bubble-chart>\n        </mat-grid-tile>\n        <mat-grid-tile *ngFor=\"let drug of drugs\">\n            <app-bubble-chart [data]=\"C_type\" [drug]=\"drug\"></app-bubble-chart>\n        </mat-grid-tile>\n        <mat-grid-tile *ngFor=\"let drug of drugs\">\n            <app-bubble-chart [data]=\"D_type\" [drug]=\"drug\"></app-bubble-chart>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>\n\n<div class=\"divergingBarChart\">\n    <span>연구자 선택 </span>\n    <select [(ngModel)]=\"selection1\" (change)=\"log(selection1)\">\n        <option></option>\n        <option *ngFor=\"let data of chartData$ | async\" [ngValue]=\"data\">{{data.Study}} {{data.Year}} {{data.Type}}</option>\n    </select>\n\n                                        <!-- 수정하기 -->\n    <app-diverging-bar-chart [study]=\"[selection1, selection2]\"></app-diverging-bar-chart>\n</div>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}